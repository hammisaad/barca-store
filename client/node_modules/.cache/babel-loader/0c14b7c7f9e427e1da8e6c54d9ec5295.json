{"ast":null,"code":"import { addItemToCart } from \"./cart.utils\";\nimport { removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  isHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART\":\n      return { ...state,\n        isHidden: !state.isHidden\n      };\n\n    case \"ADD_ITEM\":\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case \"REMOVE_ITEM\":\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case \"REMOVE_ITEM_WITH_ARROW\":\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/hammi/Desktop/react/barca-market/src/redux/cart/cart-reducer.js"],"names":["addItemToCart","removeItemFromCart","INITIAL_STATE","isHidden","cartItems","cartReducer","state","action","type","payload","filter","cartItem","id"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,IADU;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,QAAQ,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAFnB,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CACRC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACE,OAAP,CAAeG,EADpC;AAFN,OAAP;;AAMF,SAAK,wBAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAFxB,OAAP;;AAIF;AACE,aAAOH,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import { addItemToCart } from \"./cart.utils\";\r\nimport { removeItemFromCart } from \"./cart.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  isHidden: true,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_CART\":\r\n      return {\r\n        ...state,\r\n        isHidden: !state.isHidden,\r\n      };\r\n    case \"ADD_ITEM\":\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload),\r\n      };\r\n    case \"REMOVE_ITEM\":\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (cartItem) => cartItem.id !== action.payload.id\r\n        ),\r\n      };\r\n    case \"REMOVE_ITEM_WITH_ARROW\":\r\n      return {\r\n        ...state,\r\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}