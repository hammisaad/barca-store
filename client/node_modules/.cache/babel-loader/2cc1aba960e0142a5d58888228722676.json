{"ast":null,"code":"import { call, all, takeLatest, put } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure } from \"./user-actions\";\nexport function* signInGoogle() {\n  const {\n    user\n  } = yield auth.signInWithPopup(googleProvider);\n  getSnapshotFromUserRef(user);\n}\nexport function* signInEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    getSnapshotFromUserRef(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, signInGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, signInEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\nexport function* getSnapshotFromUserRef(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Users/hammi/Desktop/react/barca-market/src/redux/user/user-sagas.js"],"names":["call","all","takeLatest","put","userTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","signInGoogle","user","signInWithPopup","getSnapshotFromUserRef","signInEmail","payload","email","password","signInWithEmailAndPassword","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas","userRef","userSnapshot","get","id"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,YAAV,GAAyB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACAO,EAAAA,sBAAsB,CAACF,IAAD,CAAtB;AACD;AACD,OAAO,UAAUG,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC7D,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACa,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACAJ,IAAAA,sBAAsB,CAACF,IAAD,CAAtB;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACM,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMlB,UAAU,CAACE,SAAS,CAACiB,oBAAX,EAAiCX,YAAjC,CAAhB;AACD;AAED,OAAO,UAAUY,kBAAV,GAA+B;AACpC,QAAMpB,UAAU,CAACE,SAAS,CAACmB,mBAAX,EAAgCT,WAAhC,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMvB,GAAG,CAAC,CAACD,IAAI,CAACoB,mBAAD,CAAL,EAA4BpB,IAAI,CAACsB,kBAAD,CAAhC,CAAD,CAAT;AACD;AAED,OAAO,UAAUT,sBAAV,CAAiCF,IAAjC,EAAuC;AAC5C,MAAI;AACF,UAAMc,OAAO,GAAG,MAAMzB,IAAI,CAACO,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMe,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMxB,GAAG,CAACK,aAAa,CAAC;AAAEoB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOP,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACM,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF","sourcesContent":["import { call, all, takeLatest, put } from \"redux-saga/effects\";\r\n\r\nimport userTypes from \"./user.types\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport { signInSuccess, signInFailure } from \"./user-actions\";\r\n\r\nexport function* signInGoogle() {\r\n  const { user } = yield auth.signInWithPopup(googleProvider);\r\n  getSnapshotFromUserRef(user);\r\n}\r\nexport function* signInEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    getSnapshotFromUserRef(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, signInGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, signInEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n\r\nexport function* getSnapshotFromUserRef(user) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}