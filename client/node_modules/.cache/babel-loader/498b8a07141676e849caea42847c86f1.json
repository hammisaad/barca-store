{"ast":null,"code":"import { call, all, takeLatest, put } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user-actions\";\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* getSnapshotFromUserRef(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* checkUserSession() {\n  try {\n    const userAuth = getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserRef(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserRef(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserRef(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, signInGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, signInEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* onSignOut() {\n  yield takeLatest(userTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut)]);\n}","map":{"version":3,"sources":["C:/Users/hammi/Desktop/react/barca-market/src/redux/user/user-sagas.js"],"names":["call","all","takeLatest","put","userTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signOut","error","getSnapshotFromUserRef","userAuth","userRef","userSnapshot","get","id","checkUserSession","signInGoogle","user","signInWithPopup","signInEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { call, all, takeLatest, put } from \"redux-saga/effects\";\r\n\r\nimport userTypes from \"./user.types\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n} from \"./user-actions\";\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure());\r\n  }\r\n}\r\n\r\nexport function* getSnapshotFromUserRef(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* checkUserSession() {\r\n  try {\r\n    const userAuth = getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserRef(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserRef(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\nexport function* signInEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserRef(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, signInGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, signInEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userTypes.CHECK_USER_SESSION, checkUserSession);\r\n}\r\n\r\nexport function* onSignOut() {\r\n  yield takeLatest(userTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOut),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}